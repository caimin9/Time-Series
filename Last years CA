##############################################################################
# ST4064 Class Test 2024
# Example Script Using Labs 1â€“7 Functions and Approaches
#
# This script:
#   1) Loads and inspects data (Lab 1 style),
#   2) Uses acf(), pacf(), ts objects (Lab 2),
#   3) Uses cpgram() to view cumulative periodograms (Lab 3),
#   4) Possibly references ARMA/ARIMA simulation or arima() fitting (Lab 4, 5, 6),
#   5) Uses spectrum() for spectral analysis / periodograms (Lab 7),
#   6) Uses VAR() from vars package for multivariate analysis (Lab 7).
##############################################################################

########################
# Question 1
########################
# Load the data object 'dat' from "sharedbikes.RData"
# (Lab 1 approach: load a .RData file into memory and check structure)
load("sharedbikes.RData")
# Inspect
str(dat)
head(dat)
# 'dat' should contain columns: casual, registered, dteday, t, s1, c1, etc.

########################
# Question 2
########################
# Plot 'casual' over time using base R, then add a LOWESS smoother.
# (Lab 1 and 2 frequently show how to do time-series plots and smoothing)
dat$dteday <- as.Date(dat$dteday)  # ensure it's Date

plot(
  dat$dteday, dat$casual,
  xlab = "Date",
  ylab = "Number of Casual Hires",
  main = "Casual Hires Over Time"
)

# Add LOWESS smoother (lab 3 or so might show lowess usage)
lines(
  lowess(dat$dteday, dat$casual, f = 0.1),
  col = "red",
  lwd = 2
)

########################
# Build the linear model
########################
# According to the assignment, we remove annual periodicities (s1, c1, s2, c2)
# and weekly periodicities (s7_1, c7_1, s7_2, c7_2), plus a trend 't'.

mod <- lm(
  casual ~ t + s1 + c1 + s2 + c2 + s7_1 + c7_1 + s7_2 + c7_2,
  data = dat
)

# Store residuals as a daily ts object (Lab 2 style: turning numeric vector
# into a time series with frequency=365)
dat$res <- ts(
  residuals(mod),
  start = 2018,
  frequency = 365
)

########################
# Question 3
########################
# Plot the residual series, and then do ACF, PACF.
# (Lab 2 tasks: exploring autocorrelation/partial autocorrelation)

plot(dat$res, main = "Residuals from Linear Model")
acf(dat$res, main = "ACF of Residuals")   # from Lab 2
pacf(dat$res, main = "PACF of Residuals")

########################
# Question 4
########################
# Decompose the residual series into trend, seasonal, random.
# (Lab 3 and 1 introduced stl() or decompose())

res_decomp <- stl(dat$res, s.window = "periodic")
plot(res_decomp, main = "STL Decomposition of Residuals")

########################
# Question 5
########################
# Decompose the FIRST-ORDER DIFFERENCES of the residual series
# (again using stl or decompose)
dres <- diff(dat$res)
dres_ts <- ts(dres, start = (2018 + 1/365), frequency = 365)

dres_decomp <- stl(dres_ts, s.window = "periodic")
plot(dres_decomp, main = "STL Decomposition of Diff(Residuals)")

########################
# Question 6
########################
# Produce cumulative periodograms of:
#   a) the residual series
#   b) the first-order differences
# (Lab 3 introduced cpgram() as a standard approach)

cpgram(dat$res, main = "Cumulative Periodogram: Residuals (Lab 3 style)")
cpgram(dres_ts, main = "Cumulative Periodogram: 1st-Diff(Residuals)")

########################
# Question 7
########################
# Use arima0 to explore ARIMA(p,1,q) for the residuals
# (Lab 6 uses the 'arima' function for nottem data, but 'arima0' is older base R).
# We systematically search over small p,q

best_aic <- Inf
best_fit <- NULL
best_p <- NA
best_q <- NA

for (p in 0:3) {
  for (q in 0:3) {
    fit <- arima0(dat$res, order = c(p, 1, q))
    if (fit$aic < best_aic) {
      best_aic <- fit$aic
      best_fit <- fit
      best_p <- p
      best_q <- q
    }
  }
}

cat("Best ARIMA(p,1,q) by AIC => p =", best_p, ", q =", best_q, "\n")

########################
# Question 8
########################
# Fit that best model using 'arima' (Lab 6 approach)
# and plot the cumulative periodogram of final residuals

final_fit <- arima(dat$res, order = c(best_p, 1, best_q))
final_res <- residuals(final_fit)

cpgram(
  final_res,
  main = "Cumulative Periodogram: Residuals of Final ARIMA Fit"
)

########################
# Question 9
########################
# Re-plot casual rentals and produce a 60-day forecast using:
#  (1) The linear model 'mod',
#  (2) The ARIMA residual model 'final_fit',
# and combine them. Lab 6 also covers forecasting with arima + predict().

load("sharedbikes_forecast.RData")  # 'newdat' for next 60 days
str(newdat)

# 1) Forecast from the linear part
pred_lm <- predict(mod, newdata = newdat, se.fit = TRUE)

# 2) Forecast ARIMA residual for 60 days
n_ahead <- 60
arima_pred <- predict(final_fit, n.ahead = n_ahead)

# 3) Combine linear forecast + residual forecast
overall_forecast <- pred_lm$fit + arima_pred$pred

# For intervals, one simple approach is sqrt( (pred_lm$se.fit)^2 + (arima_pred$se)^2 )
upper <- overall_forecast + 1.96 * sqrt(pred_lm$se.fit^2 + arima_pred$se^2)
lower <- overall_forecast - 1.96 * sqrt(pred_lm$se.fit^2 + arima_pred$se^2)

# Plot
plot(
  dat$dteday, dat$casual,
  xlab = "Date", ylab = "Casual Bike Hires",
  xlim = c(min(dat$dteday), max(newdat$dteday)),
  ylim = range(c(dat$casual, upper, lower)),
  main = "Casual Bike Hires + 60-Day Forecast"
)
lines(dat$dteday, dat$casual, lwd = 2)
lines(newdat$dteday, overall_forecast, col = "red", lwd = 2)
lines(newdat$dteday, upper, col = "blue", lty = 2)
lines(newdat$dteday, lower, col = "blue", lty = 2)
legend(
  "topleft",
  legend = c("Historical", "Forecast", "95% CI"),
  col = c("black", "red", "blue"),
  lty = c(1, 1, 2),
  bty = "n"
)

########################
# Question 10
########################
# Investigate relationship between casual and registered usage:
#  - Fit linear model to registered,
#  - Extract residuals,
#  - Fit a VAR model on the *first differences* of both sets of residuals
# using (Lab 7 style) from the 'vars' package.

mod1 <- lm(
  registered ~ t + s1 + c1 + s2 + c2 + s7_1 + c7_1 + s7_2 + c7_2,
  data = dat
)
dat$res1 <- ts(
  residuals(mod1),
  start = 2018,
  frequency = 365
)

# First differences
diff_casual <- diff(dat$res)
diff_registered <- diff(dat$res1)

# Combine
library(vars)
diff_data <- cbind(diff_casual, diff_registered)

# Use VARselect to choose p-lags by SC
lag_sel <- VARselect(diff_data, lag.max = 5, type = "const")
lag_sel
chosen_lag <- lag_sel$selection["SC(n)"]
cat("SC-based chosen lag for VAR:", chosen_lag, "\n")

final_var <- VAR(diff_data, p = chosen_lag, type = "const")
summary(final_var)

##############################################################################
# End of Script
##############################################################################
